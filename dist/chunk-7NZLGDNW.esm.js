import{CONFIG as e,t,o2 as r,u as o,e as n,x as a,g as i,e2 as s,n as u,o as c,i as l,a as p,O as d,p as f,realValue as h,f as m,y as g}from"./chunk-BKI6CYPF.esm.js";import{stringify as w,parse as b}from"qs";var $=class extends Error{constructor(t,r,o){const n=o?.trim()||e.PACKAGE.PREFIX.NAME,a=t.trim();super(`\n${n.startsWith("❌")?n:"❌ "+n} - ${a}`),this.originalError=r,this.name="RouteConfigError",Error.captureStackTrace&&Error.captureStackTrace(this,v)}},v=class t extends Error{constructor(r,o,n){const a=n?.trim()||e.PACKAGE.PREFIX.NAME,i=r.trim();super(`\n${a.startsWith("❌")?a:"❌ "+a} - ${i}`),this.originalError=o,this.name="RoutePropsError",Error.captureStackTrace&&Error.captureStackTrace(this,t)}},y=class{name;definition;config;wheres;bindings={};constructor(e,t,r){this.name=e,this.definition=t,this.bindings=t?.bindings??{},this.wheres=t?.wheres??{},this.config=r}get template(){const e=`${this.origin}/${this.definition?.uri}`.replace(/\/+$/,"");return r(e)?"/":e}get origin(){if(!this.config?.absolute)return"";if(this.definition?.domain){const e=this.config.url.match(/^\w+:\/\//);if(!e)throw new $('Invalid `config.url` missing protocol (e.g., `"http://"` or `"https://"`).');return`${e[0]}${this.definition.domain}${this.config.port?`:${this.config.port}`:""}`}return this.config.url}get parameterSegments(){return this.template.match(/{[^}?]+\??}/g)?.map(e=>({name:e.replace(/{|\??}/g,""),required:!/\?}$/.test(e)}))??[]}matchesUrl(e){if(!this.definition?.methods.includes("GET"))return!1;const t=this.template.replace(/[.*+$()[\]]/g,"\\$&").replace(/(\/?){([^}?]*)(\??)}/g,(e,t,r,o)=>{const n=`(?<${r}>${this.wheres[r]?.replace(/(^\^)|(\$$)/g,"")||"[^/?]+"})`;return o?`(${t}${n})?`:`${t}${n}`}).replace(/^\w+:\/\//,""),[r,o]=e.replace(/^\w+:\/\//,"").split("?"),n=new RegExp(`^${t}/?$`).exec(r)??new RegExp(`^${t}/?$`).exec(decodeURI(r));if(n){for(const e in n.groups)n.groups[e]=l(n.groups[e])?decodeURIComponent(n.groups[e]):n.groups[e];return{params:n.groups,query:b(o)}}return!1}compile(e={}){const r=this.template.replace(/{([^}?]+)(\??)}/g,(r,o,n)=>{const a=e[o];if(!n&&t(a))throw new v(`Invalid \`"${o}"\` parameter is required for route \`"${this.name}"\`.`);const i=this.wheres[o];if(i){const e=new RegExp(`^${i}$`);if(l(a)&&!e.test(a))throw new v(`Invalid \`"${o}"\` parameter \`"${a}"\` does not match required format \`${i}\` for route \`"${this.name}"\`.`)}return encodeURI(l(a)?a:"").replace(/%7C/g,"|").replace(/%25/g,"%").replace(/\$/g,"%24")});let o=r;if(this.config?.absolute&&r.includes("://")){const[e,t]=r.split("://");o=e+"://"+t.replace(/\/{2,}/g,"/")}else o=r.replace(/\/{2,}/g,"/");return"/"===o?"/":o.replace(/\/+$/,"")}},{REPO:_}=e,E=`\n\nℹ️ Learn more: \`${_.LINK}#importing-the-route-function\`.`,I=class e{absolute;url;port;defaults;routes;location;constructor(e){this.absolute=e.absolute,this.url=e.url,this.port=e.port,this.defaults=e.defaults,this.routes=e.routes,this.location=e.location}static isRouterConfigRaw(e){if(!u(e))return!1;if(!u(e))throw new $(`Invalid \`route()\` the \`config\` property at (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid config object, but received: \`${a(e)}\`, with value: \`${h(e)}\`.${E}`);if(!l(e.url))throw new $(`Invalid \`route()\` parameter \`config.url\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid \`config.url\`.\n  - Parameter \`config.url\` must be of type \`string\` or \`null\`, but received: \`${a(e.url)}\`.${E}`);if(!o(e.port)&&!m(e.port))throw new $(`Invalid \`route()\` parameter \`config.port\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid \`config.port\`.\n  - Parameter \`config.port\` must be of type \`number\` or \`null\`, but received: \`${a(e.port)}\`, with value: \`${h(e.port)}\`.${E}`);if(!u(e.defaults))throw new $(`Invalid \`route()\` parameter \`config.defaults\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid \`config.defaults\`.\n  - Parameter \`config.defaults\` must be of type \`plain-object\` defaults property, but received: \`${a(e.defaults)}\`, with value: \`${h(e.defaults)}\`.${E}`);if(!u(e.routes))throw new $(`Invalid \`route()\` parameter \`config.routes\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid \`config.routes\`.\n  - Parameter \`config.routes\` must be of type \`plain-object\` routes property, but received: \`${a(e.routes)}\`, with value: \`${h(e.routes)}\`.${E}`);if(g(e,"location")){const t=e.location;if(!u(t))throw new $(`Invalid \`route()\` parameter \`config.location\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appLocation\` is defined globally or passed as a valid \`config.location\`.\n  - Parameter \`config.location\` must be of type \`plain-object ({ host?: string | undefined; pathname?: string | undefined; search?: string | undefined; })\` of location property, but received: \`${a(t)}\`, with value: \`${h(t)}\`.${E}`);const r=t;if(g(r,"host")&&!l(r.host))throw new $(`Invalid \`route()\` parameter \`config.location.host\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appLocation\` is defined globally or passed as a valid \`config.location\`.\n  - Parameter \`config.location.host\` must be of type \`string\` or \`undefined\`, but received: \`${a(r.host)}\`, with value: \`${h(r.host)}\`.${E}`);if(g(r,"pathname")&&!l(r.pathname))throw new $(`Invalid \`route()\` parameter \`config.location.pathname\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appLocation\` is defined globally or passed as a valid \`config.location\`.\n  - Parameter \`config.location.pathname\` must be of type \`string\` or \`undefined\`, but received: \`${a(r.pathname)}\`, with value: \`${h(r.pathname)}\`.${E}`);if(g(r,"search")&&!l(r.search))throw new $(`Invalid \`route()\` parameter \`config.location.search\` property of the \`config\` (fourth parameter) detected:\n- Ensure that \`appLocation\` is defined globally or passed as a valid \`config.location\`.\n  - Parameter \`config.location.search\` must be of type \`string\` or \`undefined\`, but received: \`${a(r.search)}\`, with value: \`${h(r.search)}\`.${E}`)}return!0}static validateAndWrap(t){try{if(t instanceof e)return t;if(!this.isRouterConfigRaw(t))throw new $(`Invalid \`route()\` the \`config\` property at (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid config object, but received: \`${a(t)}\`, with value: \`${h(t)}\`.${E}`);return new e(t)}catch(e){if(e instanceof $)throw e;throw new $(`Invalid \`route()\` the \`config\` property at (fourth parameter) detected:\n- Ensure that \`appRoutes\` is defined globally or passed as a valid config object, but received: \`${a(t)}\`, with value: \`${h(t)}\`.${E}`,i(e)?e:new Error(String(e)))}}},{REPO:R,PACKAGE:P}=e,j=class extends String{_config;_route;_params={};constructor(e,i,s=!1,u){if(super(),!t(e)&&r(e))throw new v(`Invalid \`route()\`:\n- First parameter (\`name\`) must be of type a \`string\` and a non empty-string.\n- Use \`undefined\` if you don't want to provide a name.\n- Make sure to call a valid \`Router\` instance method, or you'll encounter an error. \n\nℹ️ Learn more: \`${R.LINK}#%EF%B8%8F-warning-calling-route-without-arguments\`.`);if(!o(s)&&!n(s))throw new v(`Invalid \`route()\`:\n- Third parameter (\`absolute\`) must be of type a \`boolean\` or \`undefined\`, but received: \`${a(s)}\`. \n\nℹ️ Learn more: \`${R.LINK}#absolute-url\`.`);s=!!s;const c=this.safeValidateRouterConfig(u||o(u)?u:"undefined"!=typeof appRoutes?appRoutes:globalThis.appRoutes);if(this._config={...c,absolute:s},e){if(!this._config.routes[e])throw new v(`Route name \`"${e}"\` (first parameter) is not in the route list.`);this._route=new y(e,this._config.routes[e],this._config),this._params=this._parse(i)}}safeValidateRouterConfig(e){try{return I.validateAndWrap(e)}catch(e){if(e instanceof $)throw e;throw new Error(`${P.PREFIX.NAME} - Unknown error while validating \`route()\` config`,{cause:i(e)?e:void 0})}}_unresolve(e){e?this._config.absolute&&e.startsWith("/")&&(e=this._location().host+e):e=this._currentUrl();let t={};const[r,o]=Object.entries(this._config.routes).find(([r,o])=>t=new y(r,o,this._config).matchesUrl(e))||[void 0,void 0];return{name:r,...t,route:o}}_currentUrl(){const{host:e,pathname:t,search:r}=this._location();return(this._config.absolute?e+t:t.replace(this._config.url.replace(/^\w*:\/\/[^/]+/,""),"").replace(/^\/+/,"/"))+r}_location(){const{host:e="",pathname:t="",search:r=""}=s()?{}:window.location;return{host:this._config.location?.host??e,pathname:this._config.location?.pathname??t,search:this._config.location?.search??r}}_parse(e={},t=this._route){if(!u(e)&&!c(e))throw new v(`Invalid \`route()\` \`params\` property detected. \n- Second Parameter (\`params\`) must be of type \`plain-object\` or \`array\`, but received: \`${a(e)}\`.\n\nℹ️ More info: \`${R.LINK}#parameters\`.`);e??={},e=["string","number"].includes(typeof e)?[e]:e;const r=t?.parameterSegments.filter(({name:e})=>!this._config.defaults[e]);return c(e)?e=e.reduce((e,t,o)=>r?.[o]?{...e,[r[o].name]:t}:u(t)||c(t)?{...e,...t}:{...e,...l(t)?{[t]:""}:{}},{}):1===r?.length&&!e[r?.[0].name]&&(t&&e.hasOwnProperty(Object.values(t.bindings)[0])||e.hasOwnProperty("id"))&&(e={[r?.[0].name]:e}),{...this._defaults(t),...this._substituteBindings(e,t)}}_defaults(e){return e?.parameterSegments.filter(({name:e})=>this._config.defaults[e]).reduce((e,{name:t})=>({...e,[t]:this._config.defaults[t]}),{})}_substituteBindings(e,t=this._route){return Object.entries(e).reduce((e,[r,o])=>{if(!o||"object"!=typeof o||c(o)||!t?.parameterSegments.some(({name:e})=>e===r))return{...e,[r]:o};if(!o.hasOwnProperty(t.bindings[r])){if(!o.hasOwnProperty("id"))throw new v(`Object passed as \`"${r}"\` parameter is missing route model binding key \`${t.bindings[r]}\`.\n\nℹ️ More info: \`${R.LINK}#parameters\`.`);t.bindings[r]="id"}return{...e,[r]:o[t.bindings[r]]}},{})}get params(){const{params:e,query:t}=this._unresolve(),r={};for(const e in t){const o=t[e];l(o)?r[e]=o:c(o)?r[e]=o.filter(l).join(","):p(o)&&(r[e]=d(o))}return{...e,...r}}get routeParams(){return this._unresolve().params||{}}get queryParams(){return this._unresolve().query||{}}has(e){if(!l(e))throw new v(`Invalid \`route().has(...)\` parameter \`name\` detected.\n- First parameter (\`name\`) must be of type \`string\`, but received: \`${a(e)}\`.`);return this._config.routes.hasOwnProperty(e)}current(e,r={}){if(e&&!l(e))throw new v(`Invalid \`route().current(...)\` parameter \`name\` detected.\n- First parameter (\`name\`) must be of type \`string\`, but received: \`${a(e)}\`.`);if(r&&!u(r)&&!c(r))throw new v(`Invalid parameter \`params\` (\`second parameter\`) value passed to \`route().current(...)\`, expected a object or array (e.g., { foo: "bar" } or [{"foo": "bar"}]), but received: \`${a(r)}\`.\n\nℹ️ Learn more: \`${R.LINK}#routecurrent-optionally-accepts-parameters-as-its-second-argument-and-will-check-that-their-values-also-match-in-the-current-url\`.`);r??={};const{name:o,params:n,query:i,route:s}=this._unresolve();if(!e)return o;const d=l(o)&&new RegExp(`^${e.replace(/\./g,"\\.").replace(/\*/g,".*")}$`).test(o);if(t(r)||!d)return d;const h=new y(o,s,this._config);r=this._parse(r,h);const m={...n,...i};if(Object.values(r).every(e=>!e)&&!Object.values(m).some(e=>!f(e)))return!0;const g=(e,t)=>Object.entries(e).every(([e,r])=>{if(c(r)&&c(t[e])){const o=t[e];return r.every(e=>o.includes(e))}return p(r)&&p(t[e])?g(r,t[e]):t[e]==r});return g(r,m)}toString(){const e=this._route,t=this._params??={};if(!e)throw new v(`Function route() was called without a \`name\` (first parameter) but used as a \`string\`.\n- Pass a valid route name, or use route().current() to get the current route name — or route().current('dashboard') to check if it matches.\n\nℹ️ More info: \`${R.LINK}#%EF%B8%8F-warning-calling-route-without-arguments\`.`);const r=Object.keys(t).filter(t=>!e.parameterSegments.some(({name:e})=>e===t)).filter(e=>"_query"!==e).reduce((e,r)=>({...e,[r]:t[r]}),{}),o=t._query;if(!f(o)&&!u(o))throw new v(`Invalid parameter \`_query\` property of the \`params\` (second parameter) value passed to \`route()\`, expected a \`plain-object\` (e.g., { foo: "bar" }), but received: \`${a(o)}\`.\n\nℹ️ More info: \`${R.LINK}#query-parameters\`.`);return e.compile(t)+w({...r,...o},{addQueryPrefix:!0,arrayFormat:"indices",encodeValuesOnly:!0,skipNulls:!0,encoder:(e,t)=>n(e)?String(+e):t(e)})}valueOf(){return this.toString()}};function O(e,t,r=!1,o){const n=new j(e,t,r,o);return e?n.toString():n}export{$ as RouterConfigError,O as route};
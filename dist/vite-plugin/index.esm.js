import{CONFIG as e,n as r,e3 as t,x as o,realValue as n,o as s,p as i,i as a,e as p,g as l,h as c}from"../chunk-BKI6CYPF.esm.js";import y,{resolve as h}from"path";import g from"chalk";import{run as u}from"vite-plugin-run";import{readFileSync as f}from"fs";var $={sail:!1,types:!0,typesOnly:!1,delay:250,throttle:250,only:[],except:[]},d=g.bgHex("#00bcd4").black.bold(` ${e.PACKAGE.PREFIX.NAME} `),m={info:(e,r)=>{console.log(`\n${d} ${g.blueBright("ℹ️ "+e)} ${g.gray("➔")} ${g.white(r)}`)},success:(e,r)=>{console.log(`\n${d} ${g.greenBright("✅ "+e)} ${g.gray("➔")} ${g.whiteBright(r)}`)},warn:(e,r)=>{console.warn(`\n${d} ${g.yellow("⚠️  "+e)} ${g.gray("➔")} ${g.yellowBright(r)}`)},error:(e,r)=>{console.error(`\n${d} ${g.redBright("❌ "+e)} ${g.gray("➔")} ${g.red(r)}`)},throw:(e,r)=>{throw l(r)?(m.error(e,r.message),"development"===process.env.NODE_ENV&&r.stack&&console.error(g.gray(r.stack)),r):(m.error(e,"Unknown error occurred"),new Error(a(r)?r:"Unknown error"))},raw:e=>console.log(`\n${d} ${e}`)};function w(e,r){throw m.throw(e,r),a(r)?new Error(r):r}var{PACKAGIST_NAME:v}=e.PACKAGE,{PACKAGE:b,REPO:E}=e,P=(e={})=>{r(e)||(e={});try{const r=(()=>{try{const e=h(process.cwd(),"composer.json"),r=f(e,"utf-8"),t=c(r);t?.require?.[v]||w("composer.json",`${v} not found in composer.json dependencies`);const o=t.require[v],n=o.match(/^[~^><]?(\d+)/);n||w("Version Format",`Invalid version format for ${v}: ${o}`);const s=n[1];return m.success("Composer Package",`${v} v${s}`),s}catch(e){l(e)&&("ENOENT"===e.code&&w("composer.json",`File not found in: ${process.cwd()}.`),w("Version Fetch Failed",e)),w("Unknown Error","Something exploded 💣")}})(),{delay:d=$.delay,throttle:b=$.throttle,except:E=$.except,group:P=$.group,only:A=$.only,sail:T=$.sail,types:k=$.types,typesOnly:x=$.typesOnly,url:N=$.url}=e;if(!t(d))throw new TypeError(`Parameter \`delay\` property of the \`config\` (first parameter) must be of type \`integer-number\`, but received: \`${o(d)}\`, with value: \`${n(d)}\`.`);if(!t(b))throw new TypeError(`Parameter \`throttle\` property of the \`config\` (first parameter) must be of type \`integer-number\`, but received: \`${o(b)}\`, with value: \`${n(b)}\`.`);if(!s(E))throw new TypeError(`Parameter \`except\` property of the \`config\` (first parameter) must be of type \`array\`, but received: \`${o(E)}\`, with value: \`${n(E)}\`.`);if(!i(P)&&!a(P))throw new TypeError(`Parameter \`group\` property of the \`config\` (first parameter) must be of type \`string\`, but received: \`${o(P)}\`, with value: \`${n(P)}\`.`);if(!s(A))throw new TypeError(`Parameter \`only\` property of the \`config\` (first parameter) must be of type \`array\`, but received: \`${o(A)}\`, with value: \`${n(A)}\`.`);if(!p(T))throw new TypeError(`Parameter \`sail\` property of the \`config\` (first parameter) must be of type \`boolean\`, but received: \`${o(T)}\`, with value: \`${n(T)}\`.`);if(!p(k))throw new TypeError(`Parameter \`types\` property of the \`config\` (first parameter) must be of type \`boolean\`, but received: \`${o(k)}\`, with value: \`${n(k)}\`.`);if(!p(x))throw new TypeError(`Parameter \`typesOnly\` property of the \`config\` (first parameter) must be of type \`boolean\`, but received: \`${o(x)}\`, with value: \`${n(x)}\`.`);if(!i(N)&&!a(N))throw new TypeError(`Parameter \`url\` property of the \`config\` (first parameter) must be of type \`string\`, but received: \`${o(N)}\`, with value: \`${n(N)}\`.`);const z=E.filter(e=>!a(e));if(z.length>0)throw new TypeError(`Parameter \`except\` property of the \`config\` (first parameter) must be of type \`array-of-string\` and contains \`string\` only, invalid values: ${z.map(e=>`\n\`${o(e)}\`: \`${n(e)}\``).join(", ")}`);const O=A.filter(e=>!a(e));if(O.length>0)throw new TypeError(`Parameter \`only\` property of the \`config\` (first parameter) must be of type \`array-of-string\` and contains \`string\` only, invalid values: ${O.map(e=>`\n\`${o(e)}\`: \`${n(e)}\``).join(", ")}`);const R=((e,r)=>{const t=[r.sail&&!process.env.LARAVEL_SAIL?"sail":"php","artisan","rzl-ziggy:generate"];return r.group&&t.push("--group",r.group),r.url&&t.push("--url",r.url),["0","1","2"].includes(e)&&(r.types&&t.push("--types"),r.typesOnly&&t.push("--types-only"),"0"!==e&&"1"!==e||(r.only.length>0&&t.push("--only",r.only.join(",")),r.except.length>0&&t.push("--except",r.except.join(",")))),t})(r,{delay:d,throttle:b,except:E,group:P,only:A,sail:T,types:k,typesOnly:x,url:N}),{configResolved:j,handleHotUpdate:B}=u("development"===process.env.NODE_ENV?[{delay:d,throttle:b,onFileChanged:({file:e})=>{const r=y.relative(process.cwd(),e).replace(/\\/g,"/");console.log(`\n🚀 ${g.bold.cyanBright("Live Watcher")} ${g.gray("detected change in")} ${g.yellowBright(r)}`),console.log(`${g.hex("#ff6f00")("⚡ Rerunning")} ${g.bold.cyan(R.join(" "))} ${g.italic.gray("...syncing fresh routes 🔄.")}\n`)},name:"rzl-ziggy-generator",run:R,pattern:["routes/**/*.php","config/rzl-ziggy.php",".env",".env.*",".env.*.*"],condition:e=>{const r=y.relative(process.cwd(),e).replace(/\\/g,"/");return e.includes("/config/")&&e.endsWith("rzl-ziggy.php")||e.includes("/routes/")&&e.endsWith(".php")||".env"===r||r.startsWith(".env.")||/^config\/rzl-ziggy.php$/.test(r)||/^routes\/.*\.php$/.test(r)||/\.env(\..+)?$/.test(r)}}]:[]);return{name:"rzl-ziggy-plugin",configResolved:j,handleHotUpdate:B}}catch(e){if(console.error(`\n${g.bgRed.white.bold(`💥 ${b.PREFIX.NAME} ERROR `)} ${g.redBright("An error occurred in")} ${g.yellow(`[${b.NPM_NAME}/vite-plugin]`)}`),!l(e))throw console.error(`${g.red("❓ Unknown error type thrown:")}`),e;console.error(`${g.red("🛑 Message:")} ${g.white(e.message)}`),"development"===process.env.NODE_ENV?console.error(`${g.gray("📌 Stack Trace:")}\n${g.dim(e.stack||"")}`):console.error(`${g.gray("💡 Tip:")} Run in ${g.cyan("development")} mode to see stack trace.`)}return{}};export{P as default};
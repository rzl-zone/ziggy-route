import{CONFIG as e,n as r,e3 as t,x as o,realValue as n,o as s,p as i,i as a,e as p,g as l,h as c}from"../chunk-6LYSW3GO.esm.js";import y,{resolve as h}from"path";import g from"chalk";import{run as u}from"vite-plugin-run";import{readFileSync as f}from"fs";var $={sail:!1,types:!0,typesOnly:!1,delay:250,throttle:250,only:[],except:[]},{bgHex:d,blueBright:m,greenBright:w,gray:v,red:b,redBright:E,white:P,whiteBright:z,yellow:T,yellowBright:k}=g,x=d("#00bcd4").black.bold(` ${e.PACKAGE.PREFIX.NAME} `),A={info:(e,r)=>{console.log(`\n${x} ${m("‚ÑπÔ∏è "+e)} ${v("‚ûî")} ${P(r)}`)},success:(e,r)=>{console.log(`\n${x} ${w("‚úÖ "+e)} ${v("‚ûî")} ${z(r)}`)},warn:(e,r)=>{console.warn(`\n${x} ${T("‚ö†Ô∏è  "+e)} ${v("‚ûî")} ${k(r)}`)},error:(e,r)=>{console.error(`\n${x} ${E("‚ùå "+e)} ${v("‚ûî")} ${b(r)}`)},throw:(e,r)=>{throw l(r)?(A.error(e,r.message),"development"===process.env.NODE_ENV&&r.stack&&console.error(v(r.stack)),r):(A.error(e,"Unknown error occurred"),new Error(a(r)?r:"Unknown error"))},raw:e=>console.log(`\n${x} ${e}`)};function O(e,r){throw A.throw(e,r),a(r)?new Error(r):r}var{PACKAGIST_NAME:R}=e.PACKAGE,j=(e={})=>{r(e)||(e={});try{const r=(()=>{try{const e=h(process.cwd(),"composer.json"),r=f(e,"utf-8"),t=c(r);t?.require?.[R]||O("composer.json",`${R} not found in composer.json dependencies`);const o=t.require[R],n=o.match(/^[~^><]?(\d+)/);n||O("Version Format",`Invalid version format for ${R}: ${o}`);const s=n[1];return A.success("Composer Package",`${R} v${s}`),s}catch(e){l(e)&&("ENOENT"===e.code&&O("composer.json",`File not found in: ${process.cwd()}.`),O("Version Fetch Failed",e)),O("Unknown Error","Something exploded üí£")}})(),{delay:d=$.delay,throttle:m=$.throttle,except:w=$.except,group:v=$.group,only:b=$.only,sail:E=$.sail,types:P=$.types,typesOnly:z=$.typesOnly,url:T=$.url}=e;if(!t(d))throw new TypeError(`Parameter \`delay\` property of the \`config\` (first parameter) must be of type \`integer-number\`, but received: \`${o(d)}\`, with value: \`${n(d)}\`.`);if(!t(m))throw new TypeError(`Parameter \`throttle\` property of the \`config\` (first parameter) must be of type \`integer-number\`, but received: \`${o(m)}\`, with value: \`${n(m)}\`.`);if(!s(w))throw new TypeError(`Parameter \`except\` property of the \`config\` (first parameter) must be of type \`array\`, but received: \`${o(w)}\`, with value: \`${n(w)}\`.`);if(!i(v)&&!a(v))throw new TypeError(`Parameter \`group\` property of the \`config\` (first parameter) must be of type \`string\`, but received: \`${o(v)}\`, with value: \`${n(v)}\`.`);if(!s(b))throw new TypeError(`Parameter \`only\` property of the \`config\` (first parameter) must be of type \`array\`, but received: \`${o(b)}\`, with value: \`${n(b)}\`.`);if(!p(E))throw new TypeError(`Parameter \`sail\` property of the \`config\` (first parameter) must be of type \`boolean\`, but received: \`${o(E)}\`, with value: \`${n(E)}\`.`);if(!p(P))throw new TypeError(`Parameter \`types\` property of the \`config\` (first parameter) must be of type \`boolean\`, but received: \`${o(P)}\`, with value: \`${n(P)}\`.`);if(!p(z))throw new TypeError(`Parameter \`typesOnly\` property of the \`config\` (first parameter) must be of type \`boolean\`, but received: \`${o(z)}\`, with value: \`${n(z)}\`.`);if(!i(T)&&!a(T))throw new TypeError(`Parameter \`url\` property of the \`config\` (first parameter) must be of type \`string\`, but received: \`${o(T)}\`, with value: \`${n(T)}\`.`);const k=w.filter(e=>!a(e));if(k.length>0)throw new TypeError(`Parameter \`except\` property of the \`config\` (first parameter) must be of type \`array-of-string\` and contains \`string\` only, invalid values: ${k.map(e=>`\n\`${o(e)}\`: \`${n(e)}\``).join(", ")}`);const x=b.filter(e=>!a(e));if(x.length>0)throw new TypeError(`Parameter \`only\` property of the \`config\` (first parameter) must be of type \`array-of-string\` and contains \`string\` only, invalid values: ${x.map(e=>`\n\`${o(e)}\`: \`${n(e)}\``).join(", ")}`);const j=((e,r)=>{const t=[r.sail&&!process.env.LARAVEL_SAIL?"sail":"php","artisan","rzl-ziggy:generate"];return r.group&&t.push("--group",r.group),r.url&&t.push("--url",r.url),["0","1","2"].includes(e)&&(r.types&&t.push("--types"),r.typesOnly&&t.push("--types-only"),"0"!==e&&"1"!==e||(r.only.length>0&&t.push("--only",r.only.join(",")),r.except.length>0&&t.push("--except",r.except.join(",")))),t})(r,{delay:d,throttle:m,except:w,group:v,only:b,sail:E,types:P,typesOnly:z,url:T}),{configResolved:N,handleHotUpdate:B}=u("development"===process.env.NODE_ENV?[{delay:d,throttle:m,onFileChanged:({file:e})=>{const r=y.relative(process.cwd(),e).replace(/\\/g,"/");console.log(`\nüõ∞Ô∏è  ${g.cyanBright("Live Watcher")} ${g.gray("detected change in")} ${g.yellowBright(r)}`),console.log(`${g.hex("#ff6f00")("üîÅ Rerunning")} ${g.bold.cyan(j.join(" "))} ${g.gray("...syncing fresh routes üö¶")}\n`)},name:"rzl-ziggy-generator",run:j,pattern:["routes/**/*.php","config/rzl-ziggy.php",".env",".env.*",".env.*.*"],condition:e=>{const r=y.relative(process.cwd(),e).replace(/\\/g,"/");return e.includes("/config/")&&e.endsWith("rzl-ziggy.php")||e.includes("/routes/")&&e.endsWith(".php")||".env"===r||r.startsWith(".env.")||/^config\/rzl-ziggy.php$/.test(r)||/^routes\/.*\.php$/.test(r)||/\.env(\..+)?$/.test(r)}}]:[]);return{name:"rzl-ziggy-plugin",configResolved:N,handleHotUpdate:B}}catch(e){if(console.error(`\n${g.bgRed.white.bold(" RZL ZIGGY ERROR ")} ${g.redBright("An error occurred in")} ${g.yellow("[@rzl-zone/ziggy-route/vite-plugin]")} üö®`),!l(e))throw console.error(`${g.red("‚ùì Unknown error type thrown:")}`),e;console.error(`${g.red("‚ùå Message:")} ${g.white(e.message)}`),"development"===process.env.NODE_ENV?console.error(`${g.gray("üìç Stack Trace:")}\n${g.dim(e.stack||"")}`):console.error(`${g.gray("‚ÑπÔ∏è  Tip:")} Run in ${g.cyan("development")} mode to see stack trace.`)}return{}};export{j as default};